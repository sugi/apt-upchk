#! /bin/sh
# postinst script for apt-upchk
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)
      . /usr/share/debconf/confmodule

      id aptupchk > /dev/null 2>&1 || adduser --system --no-create-home --disabled-password aptupchk
      chown aptupchk -R /var/lib/apt-upchk/workroot
      chown aptupchk -R /var/lib/apt-upchk/cache

      if [ "$2" = 22 ]; then
	# purge old dir
	test -d /var/lib/apt-upchk/workroot/etc/apt && \
	  rm -rf /var/lib/apt-upchk/workroot/etc/apt
	ln -s /etc/apt /var/lib/apt-upchk/workroot/etc
      fi

      notifyconf=/etc/apt-upchk/notify.conf

      if ( test ! -r $notifyconf || grep -q "DO NOT MODIFY" $notifyconf); then

        echo "# AUTOMATICALLY GENARATED. DO NOT MODIFY THIS." > $notifyconf
        echo "# If you want to change, use 'dpkg-reconfigure apt-upchk'." >> $notifyconf

         db_get apt-upchk/mailto
         echo "mailto=\"$RET\"" >> $notifyconf

       else
         echo "$notifyconf has been modified manually? skipping configure." >&2
       fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;
*)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


